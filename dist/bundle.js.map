{"version":3,"sources":["bundle.js","app.js","plugins.js","index.js","dprt/dprtList.js","dprt/dprtListAdd.js","dprt/dprtListEdit.js","list/listAll.js","list/listAllDetail.js","list/listDprt.js","list/listDprtAdd.js","list/listDprtReset.js","list/listRcl.js","user/pwEdit.js","user/userEdit.js","user/userInfo.js","user.js","dprt/dprtAll.js","user/info.js","logout.js"],"names":["encrypt","msg","sodium","crypto_box_easy","from_hex","nonce","pk","sk","footer","x","window","innerWidth","document","getElementById","style","minHeight","innerHeight","naviSecondery","num","getElementsByClassName","length","setAttribute","moreMenu","menu","moreBtn","addEventListener","e","target","display","setTimeout","opacity","optionMenu","optionBtn","cfrm","parentNode","console","log","listCheck","o","checked","backgroundImage","secretShow","hl","hr","src","secretHide","radio","radios","getElementsByTagName","angular","module","config","$httpProvider","defaults","headers","post","param","obj","name","value","fullSubName","subName","subValue","innerObj","i","query","Array","Object","undefined","encodeURIComponent","substr","transformRequest","data","isObject","String","host","Image","school","gender","dprt","position","superposition","$stateProvider","$urlRouterProvider","when","state","abstract","url","templateUrl","controller","$scope","$cookies","userService","alertbox","type","alerts","splice","push","closeAlert","index","update","flag","user","studentNo","password","login","then","response","cookieset","token","result","code","location","href","hint","dprtall","show","dprts","editor","logincheck","edit","isEdit","add","editmsg","dprtname","dprtnote","alert","$stateParams","request","id","editshow","content","listall","parseInt","current","dprtopt","positionopt","keyword","filter","count","members","total","focus","reset","pagenext","pageprev","listdprt","showdetail","detail","changeposition","history","back","showdprt","checkboxselect","checkbox","column","substring","rcl","checkall","check","cb","getElementsByName","click","recycle","note","confirm","resetid","showuncompleted","addshow","uncompleteds","str1","innerHTML","str2","replace","studentno","failedno","fail","sn","failed","idrequest","resetshow","newpw","cfrmpw","pw","pwcfrm","listrcl","rclshow","p","recover","del","userinfo","pwedit","oldpw","old","logout","genderopt","schoolopt","username","room","telLong","telShort","email","infoedit","service","$http","md5","get","timestamp","Date","getTime","auth","remove","date","setDate","getDate","expire","put","expires","postdata","directive","restrict","link","scope","element","attrs","bind"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('app', ['ui.router', 'ngCookies', 'ui.bootstrap']).config(['$httpProvider', function ($httpProvider) {\n  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n\n  var param = function param(obj) {\n    var query = '',\n        name,\n        value,\n        fullSubName,\n        subName,\n        subValue,\n        innerObj,\n        i;\n\n    for (name in obj) {\n      value = obj[name];\n\n      if (value instanceof Array) {\n        for (i = 0; i < value.length; ++i) {\n          subValue = value[i];\n          fullSubName = name + '[' + i + ']';\n          innerObj = {};\n          innerObj[fullSubName] = subValue;\n          query += param(innerObj) + '&';\n        }\n      } else if (value instanceof Object) {\n        for (subName in value) {\n          subValue = value[subName];\n          fullSubName = name + '[' + subName + ']';\n          innerObj = {};\n          innerObj[fullSubName] = subValue;\n          query += param(innerObj) + '&';\n        }\n      } else if (value !== undefined && value !== null) query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\n    }\n\n    return query.length ? query.substr(0, query.length - 1) : query;\n  };\n\n  // Override $http service's default transformRequest\n  $httpProvider.defaults.transformRequest = [function (data) {\n    return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;\n  }];\n}]);\n\n// var host = 'http://125.216.250.105/bbter/index.php/Home/'\n// var host = 'http://192.168.1.120/bbter/index.php/Home/'\nvar host = 'http://222.201.132.27/bbter-all/index.php/Home/';\n\nnew Image().src = 'img/TZH.png';\nnew Image().src = 'img/TMH.png';\nnew Image().src = 'img/checked.png';\n\nfunction encrypt(msg) {\n  return sodium.crypto_box_easy(msg, sodium.from_hex(nonce), sodium.from_hex(pk), sodium.from_hex(sk), 'hex');\n}\n\nvar school = [{ 'name': '请选择', 'value': '' }, { 'name': 'C.材料科学与工程学院', 'value': '材料科学与工程学院' }, { 'name': 'D.电子与信息学院', 'value': '电子与信息学院' }, { 'name': 'D.电力学院', 'value': '电力学院' }, { 'name': 'F.法学院(知识产权学院)', 'value': '法学院(知识产权学院)' }, { 'name': 'G.国际教育学院', 'value': '国际教育学院' }, { 'name': 'G.工商管理学院(创业教育学院)', 'value': '工商管理学院(创业教育学院)' }, { 'name': 'G.公共管理学院', 'value': '公共管理学院' }, { 'name': 'H.环境与能源学院', 'value': '环境与能源学院' }, { 'name': 'H.化学与化工学院', 'value': '化学与化工学院' }, { 'name': 'J.机械与汽车工程学院', 'value': '机械与汽车工程学院' }, { 'name': 'J.计算机科学与工程学院', 'value': '计算机科学与工程学院' }, { 'name': 'J.建筑学院', 'value': '建筑学院' }, { 'name': 'J.经济与贸易学院', 'value': '经济与贸易学院' }, { 'name': 'L.理学院(数学系 物理系)', 'value': '理学院(数学系 物理系)' }, { 'name': 'Q.轻工与食品学院', 'value': '轻工与食品学院' }, { 'name': 'R.软件学院', 'value': '软件学院' }, { 'name': 'S.生物科学与工程学院', 'value': '生物科学与工程学院' }, { 'name': 'S.思想政治学院', 'value': '思想政治学院' }, { 'name': 'S.设计学院', 'value': '设计学院' }, { 'name': 'T.土木与交通学院', 'value': '土木与交通学院' }, { 'name': 'T.体育学院', 'value': '体育学院' }, { 'name': 'W.外国语学院', 'value': '外国语学院' }, { 'name': 'X.新闻与传播学院', 'value': '新闻与传播学院' }, { 'name': 'Y.艺术学院', 'value': '艺术学院' }, { 'name': 'Y.医学院', 'value': '医学院' }, { 'name': 'Z.自动化科学与工程学院', 'value': '自动化科学与工程学院' }];\n\nvar gender = [{ 'name': '请选择', 'value': '' }, { 'name': '男', 'value': '男' }, { 'name': '女', 'value': '女' }];\n\nvar dprt = [{ 'name': '所有部门', 'value': '' }, { 'name': '编辑部', 'value': '编辑部' }, { 'name': '策划推广部', 'value': '策划推广部' }, { 'name': '技术部', 'value': '技术部' }, { 'name': '节目部', 'value': '节目部' }, { 'name': '人力资源部', 'value': '人力资源部' }, { 'name': '视觉设计部', 'value': '视觉设计部' }, { 'name': '视频部', 'value': '视频部' }, { 'name': '外联部', 'value': '外联部' }, { 'name': '综合管理部', 'value': '综合管理部' }, { 'name': '综合新闻部', 'value': '综合新闻部' }];\n\nvar position = [{ 'name': '所有职位', 'value': '' }, { 'name': '干事', 'value': '干事' }, { 'name': '主管', 'value': '主管' }, { 'name': '部长', 'value': '部长' }, { 'name': '常委', 'value': '常委' }];\n\nvar superposition = [{ 'name': '干事', 'value': '干事' }, { 'name': '主管', 'value': '主管' }, { 'name': '部长', 'value': '部长' }, { 'name': '常委', 'value': '常委' }, { 'name': '超级管理员', 'value': '超级管理员' }];\n\nfunction footer() {\n  var x = window.innerWidth;\n  if (x >= 1600) {\n    document.getElementById('body').style.minHeight = window.innerHeight - 272 + 'px';\n  } else {\n    document.getElementById('body').style.minHeight = window.innerHeight - 240 + 'px';\n  }\n}\nfunction naviSecondery(num) {\n  var naviSecondery = document.getElementsByClassName('naviSeconderyBtn');\n  for (var x = 0; x < naviSecondery.length; x++) {\n    if (x != num) {\n      naviSecondery[x].setAttribute('class', 'naviSeconderyBtn fontNormal');\n    } else {\n      naviSecondery[x].setAttribute('class', 'naviSeconderyBtn fontNormal naviSeconderyBtnActive');\n    }\n  }\n}\nfunction moreMenu() {\n  var menu = document.getElementById('moreMenu');\n  var moreBtn = document.getElementById('moreBtn');\n  document.addEventListener('click', function (e) {\n    if (moreBtn == e.target && menu.style.display == 'none') {\n      menu.style.display = 'block';\n      setTimeout(function () {\n        menu.style.opacity = '1';\n      }, 0);\n    }\n    if (moreBtn != e.target && menu.style.display == 'block') {\n      menu.style.opacity = '0';\n      setTimeout(function () {\n        menu.style.display = 'none';\n      }, 200);\n    }\n  });\n}\nfunction optionMenu() {\n  var optionMenu = document.getElementById('optionMenu');\n  var optionBtn = document.getElementById('optionBtn');\n  var cfrm = document.getElementsByClassName('txtBtn');\n  document.addEventListener('mousedown', function (e) {\n    if (optionBtn == e.target && optionMenu.style.display == 'none') {\n      setTimeout(function () {\n        optionMenu.style.display = 'block';\n      }, 1);\n      setTimeout(function () {\n        optionMenu.style.opacity = '1';\n      }, 2);\n    }\n    if ((optionMenu != e.target && optionMenu != e.target.parentNode && optionMenu != e.target.parentNode.parentNode || cfrm[0] == e.target || cfrm[1] == e.target) && optionMenu.style.display == 'block') {\n      console.log(e.target);\n      optionMenu.style.opacity = '0';\n      setTimeout(function () {\n        optionMenu.style.display = 'none';\n      }, 201);\n    }\n  });\n}\nfunction listCheck(o) {\n  if (o.checked) {\n    o.parentNode.style.backgroundImage = 'url(img/checked.png)';\n  } else {\n    o.parentNode.style.backgroundImage = 'url(img/unchecked.png)';\n  }\n}\nfunction secretShow() {\n  var hl = document.getElementById('loginLeft');\n  var hr = document.getElementById('loginRight');\n  var secretInput = document.getElementById('secret');\n  hl.src = 'img/TZ.png';\n  hr.src = 'img/TM.png';\n}\nfunction secretHide() {\n  var hl = document.getElementById('loginLeft');\n  var hr = document.getElementById('loginRight');\n  var secretInput = document.getElementById('secret');\n  hl.src = 'img/TZH.png';\n  hr.src = 'img/TMH.png';\n}\nfunction radio(o) {\n  o.parentNode.style.backgroundImage = 'url(img/checked.png)';\n  var radios = document.getElementsByTagName('label');\n  for (var x = 0; x < radios.length; x++) {\n    if (radios[x] != o.parentNode) {\n      radios[x].style.backgroundImage = 'url(img/unchecked.png)';\n    }\n  }\n}\n\nangular.module('app').config(function ($stateProvider, $urlRouterProvider) {\n  $urlRouterProvider.when('', '/user/info').when('/user', '/user/info').when('/list', '/list/all/&&/1').when('/dprt', '/dprt/all');\n\n  $stateProvider.state('user', {\n    abstract: true,\n    url: '/user',\n    templateUrl: 'templates/navi/navi-user.html'\n  }).state('list', {\n    url: '/list',\n    abstract: true,\n    templateUrl: 'templates/navi/navi-list.html'\n  }).state('dprt', {\n    url: '/dprt',\n    abstract: true,\n    templateUrl: 'templates/navi/navi-dprt.html'\n  }).state('login', {\n    url: '/login',\n    templateUrl: 'templates/login.html',\n    controller: function controller($scope, $cookies, userService) {\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      $scope.update = function () {\n        $scope.flag = true;\n\n        var user = {};\n\n        user.studentNo = $scope.studentNo;\n        user.password = $scope.password;\n\n        userService.login(user).then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code) || response.data.code == 201) {\n            location.href = '#/user';\n          } else {\n            alertbox('danger', userService.hint(response.data.code));\n          }\n\n          $scope.flag = false;\n        });\n      };\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('dprt.all', {\n    url: '/all',\n    templateUrl: 'templates/department/department-all.html',\n    controller: function controller($scope, userService, dprtall) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      function show() {\n        dprtall.show().then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            $scope.dprts = response.data.data.dprt;\n            $scope.editor = response.data.data.editor;\n          } else {\n            alertbox('danger', userService.hint(response.data.code));\n          }\n        });\n      }\n\n      show();\n\n      $scope.radio = {};\n\n      $scope.edit = function () {\n        if ($scope.radio.dprt != undefined) {\n          location.href = '#/dprt/edit/' + $scope.radio.dprt;\n        } else {\n          alertbox('danger', '请选择操作对象');\n        }\n      };\n\n      $scope.isEdit = function (value) {\n        if (value) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      // $scope.del = function(){\n\n      // \tvar editmsg = {}\n\n      // \teditmsg.id = $scope.radio.dprt\n\n      // \tif(editmsg.id != undefined){\n\n      // \t\tdprtall.del(editmsg)\n      // \t\t\t.then(function(response){\n\n      // \t\t\tuserService.cookieset(response.data.token)\n\n      // \t\t\tif(userService.result(response.data.code)){\n\n      // \t\t\t\talert(\"success\")\n      // \t\t\t\tshow()\n\n      // \t\t\t}\n      // \t\t})\n\n      // \t} else {\n\n      // \t\talert(\"请选择对象\")\n\n      // \t}\n\n      // }\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('dprt.add', {\n    url: '/add',\n    templateUrl: 'templates/department/department-add.html',\n    controller: function controller($scope, userService, dprtall) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      $scope.add = function () {\n        $scope.flag = true;\n\n        var editmsg = {};\n\n        editmsg.dprtname = $scope.dprtname;\n        editmsg.dprtnote = $scope.dprtnote;\n\n        dprtall.add(editmsg).then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            alert('success');\n            location.href = '#/dprt/all';\n          }\n\n          $scope.flag = true;\n        });\n      };\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('dprt.edit', {\n    url: '/edit/:id',\n    templateUrl: 'templates/department/department-edit.html',\n    controller: function controller($scope, $stateParams, userService, dprtall) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      var request = {};\n\n      request.id = $stateParams.id;\n\n      dprtall.editshow(request).then(function (response) {\n        userService.cookieset(response.data.token);\n\n        if (userService.result(response.data.code)) {\n          $scope.content = response.data.data;\n\n          $scope.dprtname = $scope.content.dprtname;\n          $scope.dprtnote = $scope.content.dprtnote;\n        } else {\n          alertbox('danger', userService.hint(response.data.code));\n        }\n      });\n\n      $scope.edit = function () {\n        $scope.flag = true;\n\n        var editmsg = {};\n\n        editmsg.id = request.id;\n        editmsg.dprtname = $scope.dprtname;\n        editmsg.dprtnote = $scope.dprtnote;\n\n        dprtall.edit(editmsg).then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            alertbox('success', '部门资料修改成功');\n\n            setTimeout(function () {\n              location.href = '#/dprt/all';\n            }, 1500);\n          } else {\n            alertbox('danger', userService.hint(response.data.code));\n          }\n\n          $scope.flag = true;\n        });\n      };\n    }\n\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('list.all', {\n    url: '/all/:dprt&:position&:keyword/:current',\n    templateUrl: 'templates/list/list-all.html',\n    controller: function controller($scope, $stateParams, listall, userService) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      naviSecondery(0);\n\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      var x = parseInt($stateParams.current);\n\n      $scope.dprtopt = dprt;\n      $scope.positionopt = position;\n\n      $scope.dprt = $stateParams.dprt;\n      $scope.position = $stateParams.position;\n      $scope.keyword = $stateParams.keyword;\n      $scope.current = $stateParams.current;\n\n      var editmsg = {};\n      editmsg.filter = {};\n\n      editmsg.current = x;\n      editmsg.count = 15;\n      editmsg.filter.dprt = $stateParams.dprt;\n      editmsg.filter.position = $stateParams.position;\n      editmsg.filter.keyword = $stateParams.keyword;\n\n      listall.show(editmsg).then(function (response) {\n        userService.cookieset(response.data.token);\n\n        if (userService.result(response.data.code)) {\n          $scope.members = response.data.data.members;\n          $scope.total = response.data.data.total;\n          $scope.editor = response.data.data.editor;\n        }\n      });\n\n      document.getElementById('search').focus();\n\n      $scope.isEdit = function (value) {\n        if (value) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      $scope.filter = function () {\n        location.href = '#list/all/' + $scope.dprt + '&' + $scope.position + '&' + $scope.keyword + '/1';\n      };\n\n      $scope.reset = function () {\n        location.href = '#list/all/&&/1';\n      };\n\n      $scope.pagenext = function () {\n        if (x + 1 <= $scope.total) {\n          location.href = '#list/all/' + $scope.dprt + '&' + $scope.position + '&' + $scope.keyword + '/' + (x + 1);\n        } else {\n          alertbox('danger', '已经是最后一页');\n        }\n      };\n\n      $scope.pageprev = function () {\n        if (x - 1 >= 1) {\n          location.href = '#list/all/' + $scope.dprt + '&' + $scope.position + '&' + $scope.keyword + '/' + (x - 1);\n        } else {\n          alertbox('danger', '已经是第一页');\n        }\n      };\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('list.detail', {\n    url: '/detail/:id',\n    templateUrl: 'templates/list/list-detail.html',\n    controller: function controller($scope, $stateParams, listall, listdprt, userService) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      naviSecondery(0);\n\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      $scope.positionopt = superposition;\n\n      function showdetail() {\n        listall.detail($stateParams).then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            $scope.content = response.data.data.content;\n            $scope.editor = response.data.data.editor;\n\n            $scope.position = $scope.content.position;\n          } else {\n            alertbox('danger', userService.hint(response.data.code));\n          }\n        });\n      }\n\n      showdetail();\n\n      $scope.isEdit = function (value) {\n        if (value) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      $scope.changeposition = function () {\n        $scope.flag = true;\n\n        var editmsg = {};\n\n        editmsg.id = $stateParams.id;\n\n        editmsg.position = $scope.position;\n\n        listdprt.position(editmsg).then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            alertbox('success', '修改职位成功');\n            showdetail();\n            setTimeout(function () {\n              history.back();\n            }, 1500);\n          } else {\n            alertbox('danger', userService.hint(response.data.code));\n          }\n\n          $scope.flag = false;\n        });\n      };\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('list.dprt', {\n    url: '/dprt',\n    templateUrl: 'templates/list/list-department.html',\n    controller: function controller($scope, listdprt, userService) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      optionMenu();\n      moreMenu();\n      naviSecondery(1);\n\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      $scope.content = {};\n\n      function showdprt() {\n        listdprt.show().then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            $scope.members = response.data.data.members;\n            $scope.editor = response.data.data.editor;\n          }\n        });\n      }\n\n      showdprt();\n\n      $scope.isEdit = function (value) {\n        if (value) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      $scope.checkbox = [];\n      $scope.rcl = '退休';\n      $scope.position = '主管';\n\n      function checkboxselect() {\n        var id = '';\n\n        for (x = 0; x < $scope.checkbox.length; x++) {\n          if ($scope.checkbox[x] != null && $scope.checkbox[x].column != undefined) {\n            id = id + $scope.checkbox[x].column + ',';\n\n            $scope.checkbox[x] = null;\n          }\n        }\n\n        id = id.substring(0, id.length - 1);\n\n        return id;\n      }\n\n      $scope.checkbox = [];\n\n      $scope.checkall = function (o) {\n        var check = document.getElementById('check');\n\n        var cb = document.getElementsByName('cb');\n\n        console.log(check);\n\n        if (check.checked) {\n          for (x = 0; x < cb.length; x++) {\n            if (!cb[x].checked) {\n              cb[x].click();\n            }\n          }\n        } else {\n          for (x = 0; x < cb.length; x++) {\n            if (cb[x].checked) {\n              cb[x].click();\n            }\n          }\n        }\n      };\n\n      $scope.recycle = function () {\n        var editmsg = {};\n\n        editmsg.id = checkboxselect();\n\n        if (editmsg.id != '') {\n          $scope.flag = true;\n\n          editmsg.note = $scope.rcl;\n\n          listdprt.rcl(editmsg).then(function (response) {\n            userService.cookieset(response.data.token);\n\n            if (userService.result(response.data.code)) {\n              alertbox('success', '置入回收站成功');\n              showdprt();\n            } else {\n              alertbox('danger', userService.hint(response.data.code));\n            }\n\n            $scope.flag = false;\n          });\n\n          var check = document.getElementById('check');\n\n          if (check.checked) {\n            check.click();\n          }\n        } else {\n          alertbox('danger', '请选择操作对象');\n        }\n      };\n\n      $scope.changeposition = function () {\n        var editmsg = {};\n\n        editmsg.id = checkboxselect();\n\n        if (editmsg.id != '') {\n          if (window.confirm('确认修改职位吗?')) {\n            $scope.flag = true;\n\n            editmsg.position = $scope.position;\n\n            listdprt.position(editmsg).then(function (response) {\n              userService.cookieset(response.data.token);\n\n              if (userService.result(response.data.code)) {\n                alertbox('success', '修改职位成功');\n                showdprt();\n              } else {\n                alertbox('danger', userService.hint(response.data.code));\n              }\n\n              $scope.flag = false;\n            });\n          } else {\n            var cb = document.getElementsByName('cb');\n\n            for (x = 0; x < cb.length; x++) {\n              if (cb[x].checked) {\n                cb[x].click();\n              }\n            }\n          }\n\n          var check = document.getElementById('check');\n\n          if (check.checked) {\n            check.click();\n          }\n        } else {\n          alertbox('danger', '请选择操作对象');\n        }\n      };\n\n      $scope.reset = function () {\n        var resetid = checkboxselect();\n\n        if (resetid != '') {\n          location.href = '#/list/reset/' + resetid;\n        } else {\n          alertbox('danger', '请选择操作对象');\n        }\n      };\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('list.add', {\n    url: '/add',\n    templateUrl: 'templates/list/list-add.html',\n    controller: function controller($scope, listdprt, userService) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      naviSecondery(1);\n\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      $scope.position = '干事';\n\n      function showuncompleted() {\n        listdprt.addshow().then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            $scope.uncompleteds = response.data.data.uncompleteds;\n          } else {\n            alertbox('danger', userService.hint(response.data.code));\n          }\n        });\n      }\n\n      showuncompleted();\n\n      $scope.add = function () {\n        var str1 = document.getElementById('studentNo').innerHTML;\n        var str2 = str1.replace(/\\<\\/span><span style=\"-webkit-text-stroke-width: 0.2px;\"><br><\\/span>\\<\\/div><div style=\"-webkit-text-stroke-width: 0.2px;\"><span style=\"-webkit-text-stroke-width: 0.2px;\">/g, '.').replace(/\\<span style=\"-webkit-text-stroke-width: 0.2px;\"\\>/g, '').replace(/\\<\\/span\\>\\<br style=\"-webkit-text-stroke-width: 0.2px;\"\\>\\<div style=\"-webkit-text-stroke-width: 0.2px;\"\\>/g, '').replace(/<\\/span><\\/div>/g, '').replace(/<\\/span><div style=\"-webkit-text-stroke-width: 0.2px;\">/g, '').replace(/<div style=\"-webkit-text-stroke-width: 0.2px;\"><br>/g, '').replace(/<div style=\"-webkit-text-stroke-width: 0.2px;\">/g, '').replace(/<br>/g, '').replace(/<\\/span>/g, '.').replace(/<\\/div>/g, '').replace(/<div>/g, '').replace(/<span>/g, '');\n\n        // console.log(str2)\n\n        $scope.flag = true;\n\n        var editmsg = {};\n\n        editmsg.studentno = str2;\n        editmsg.position = $scope.position;\n\n        listdprt.add(editmsg).then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            alertbox('success', '添加新成员成功，请在部门列表查看');\n\n            setTimeout(function () {\n              location.href = '#/list/dprt';\n            }, 1500);\n          } else {\n            var failedno = function failedno(fail) {\n              var sn = '';\n\n              for (x = 0; x < response.data.data.failed.length; x++) {\n                sn += response.data.data.failed[x] + '\\r';\n              }\n\n              return sn;\n            };\n\n            alertbox('danger', userService.hint(response.data.code));\n\n            var fail = response.data.data.failed;\n\n            $scope.studentno = failedno();\n\n            showuncompleted();\n          }\n\n          $scope.flag = false;\n        });\n\n        $scope.flag = false;\n      };\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('list.reset', {\n    url: '/reset/:id',\n    templateUrl: 'templates/list/list-resetpw.html',\n    controller: function controller($scope, $stateParams, listdprt, userService) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      naviSecondery(1);\n\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      var idrequest = {};\n      idrequest.id = $stateParams.id;\n\n      listdprt.resetshow(idrequest).then(function (response) {\n        userService.cookieset(response.data.token);\n\n        if (userService.result(response.data.code)) {\n          alertbox('', '此操作将修改对象的密码，无法撤销');\n\n          $scope.members = response.data.data.members;\n        } else {\n          if (response.data.code == 108) {\n            setTimeout(function () {\n              history.back();\n            }, 1500);\n          }\n\n          alertbox('danger', userService.hint(response.data.code));\n        }\n      });\n\n      $scope.reset = function () {\n        if ($scope.newpw == $scope.cfrmpw) {\n          if (window.confirm('确认强制修改密码吗?')) {\n            $scope.flag = true;\n\n            var editmsg = {};\n\n            editmsg.id = idrequest.id;\n            editmsg.pw = $scope.newpw;\n            editmsg.pwcfrm = $scope.cfrmpw;\n\n            listdprt.reset(editmsg).then(function (response) {\n              userService.cookieset(response.data.token);\n\n              if (userService.result(response.data.code)) {\n                alertbox('success', '强制修改密码成功');\n\n                setTimeout(function () {\n                  location.href = '#/list/dprt';\n                }, 1500);\n              } else {\n                alertbox('danger', userService.hint(response.data.code));\n              }\n\n              $scope.flag = false;\n            });\n          }\n        } else {\n          alertbox('danger', '确认密码不一致');\n        }\n      };\n    }\n\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('list.recycle', {\n    url: '/recycle/:current',\n    templateUrl: 'templates/list/list-recycle.html',\n    controller: function controller($scope, $stateParams, listrcl, userService) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      naviSecondery(2);\n\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      var p = parseInt($stateParams.current);\n\n      $scope.current = $stateParams.current;\n\n      var editmsg = {};\n\n      editmsg.current = p;\n      editmsg.count = 15;\n\n      function rclshow() {\n        listrcl.show(editmsg).then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            $scope.members = response.data.data.members;\n            $scope.total = response.data.data.total;\n          } else {\n            alertbox('danger', userService.hint(response.data.code));\n          }\n        });\n      }\n\n      rclshow();\n\n      var cb = document.getElementsByName('cb');\n\n      $scope.checkall = function (o) {\n        var check = document.getElementById('check');\n\n        var cb = document.getElementsByName('cb');\n\n        if (check.checked) {\n          for (x = 0; x < cb.length; x++) {\n            if (!cb[x].checked) {\n              cb[x].click();\n            }\n          }\n        } else {\n          for (x = 0; x < cb.length; x++) {\n            if (cb[x].checked) {\n              cb[x].click();\n            }\n          }\n        }\n      };\n\n      $scope.pagenext = function () {\n        if (p + 1 <= $scope.total) {\n          location.href = '#list/recycle/' + (p + 1);\n        } else {\n          alertbox('danger', '已经是最后一页');\n        }\n      };\n\n      $scope.pageprev = function () {\n        if (p - 1 >= 1) {\n          location.href = '#list/recycle/' + (p - 1);\n        } else {\n          alertbox('danger', '已经是第一页');\n        }\n      };\n\n      $scope.checkbox = [];\n\n      function checkboxselect() {\n        var id = '';\n\n        for (x = 0; x < $scope.checkbox.length; x++) {\n          if ($scope.checkbox[x] != null && $scope.checkbox[x].column != undefined) {\n            id = id + $scope.checkbox[x].column + ',';\n\n            $scope.checkbox[x] = null;\n          }\n        }\n\n        id = id.substring(0, id.length - 1);\n\n        return id;\n      }\n\n      $scope.recover = function () {\n        $scope.flag = true;\n\n        var editmsg = {};\n\n        editmsg.id = checkboxselect();\n\n        if (editmsg.id != '') {\n          editmsg.position = $scope.position;\n\n          listrcl.recover(editmsg).then(function (response) {\n            userService.cookieset(response.data.token);\n\n            if (userService.result(response.data.code)) {\n              alertbox('success', '恢复成功。对象被还原至部门列表');\n              rclshow();\n            } else {\n              alertbox('danger', userService.hint(response.data.code));\n            }\n\n            $scope.flag = false;\n          });\n\n          var check = document.getElementById('check');\n\n          if (check.checked) {\n            check.click();\n          }\n        } else {\n          alertbox('danger', '请选择要操作的对象');\n\n          $scope.flag = false;\n        }\n      };\n\n      $scope.del = function () {\n        var editmsg = {};\n\n        editmsg.id = checkboxselect();\n\n        if (editmsg.id != '') {\n          if (window.confirm('此操作将无法撤销,确认彻底删除吗?')) {\n            $scope.flag = true;\n\n            editmsg.position = $scope.position;\n\n            listrcl.del(editmsg).then(function (response) {\n              userService.cookieset(response.data.token);\n\n              if (userService.result(response.data.code)) {\n                alertbox('success', '彻底删除对象成功');\n                rclshow();\n              } else {\n                alertbox('danger', userService.hint(response.data.code));\n              }\n\n              $scope.flag = false;\n            });\n          } else {\n            var cb = document.getElementsByName('cb');\n\n            for (x = 0; x < cb.length; x++) {\n              if (cb[x].checked) {\n                cb[x].click();\n              }\n            }\n          }\n\n          var check = document.getElementById('check');\n\n          if (check.checked) {\n            check.click();\n          }\n        } else {\n          alertbox('danger', '请选择要操作的对象');\n        }\n      };\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('user.pw', {\n    url: '/pwedit',\n    templateUrl: 'templates/user/password-edit.html',\n    controller: function controller($scope, userinfo, userService) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      naviSecondery(2);\n\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      $scope.pwedit = function () {\n        if ($scope.newpw == $scope.cfrmpw && $scope.oldpw != $scope.newpw) {\n          if (window.confirm('确认修改密码吗?')) {\n            $scope.flag = true;\n\n            var editmsg = {};\n\n            editmsg.old = $scope.oldpw;\n            editmsg.new = $scope.newpw;\n            editmsg.cfrm = $scope.cfrmpw;\n\n            userinfo.password(editmsg).then(function (response) {\n              userService.cookieset(response.data.token);\n\n              if (userService.result(response.data.code)) {\n                alertbox('success', '密码修改成功,请重新登录');\n\n                setTimeout(function () {\n                  userService.logout();\n                  location.href = '#/login';\n                }, 1500);\n              } else {\n                alertbox('danger', userService.hint(response.data.code));\n              }\n\n              $scope.flag = false;\n            });\n          }\n        } else {\n          if ($scope.oldpw == $scope.newpw) {\n            alertbox('danger', '新旧密码相同');\n          }\n          if ($scope.newpw != $scope.cfrmpw) {\n            alertbox('danger', '确认密码不一致');\n          }\n        }\n      };\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('user.edit', {\n    url: '/infoedit',\n    templateUrl: 'templates/user/info-edit.html',\n    controller: function controller($scope, userinfo, userService) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      naviSecondery(1);\n\n      $scope.alerts = [];\n\n      function alertbox(type, msg) {\n        if ($scope.alerts != []) {\n          $scope.alerts.splice(0, 1);\n        }\n\n        $scope.alerts.push({ type: type, msg: msg });\n      }\n\n      $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n      };\n\n      userinfo.show().then(function (response) {\n        $scope.genderopt = gender;\n        $scope.schoolopt = school;\n\n        userService.cookieset(response.data.token);\n\n        if (response.data.code == 200) {\n          $scope.content = response.data.data;\n\n          $scope.username = $scope.content.username;\n          $scope.room = $scope.content.room;\n          $scope.telLong = $scope.content.telLong;\n          $scope.telShort = $scope.content.telShort;\n          $scope.email = $scope.content.email;\n\n          $scope.gender = $scope.content.gender;\n          $scope.school = $scope.content.school;\n        } else {\n          if (response.data.code == 201) {\n            alertbox('', userService.hint(response.data.code));\n\n            $scope.gender = '';\n            $scope.school = '';\n          }\n        }\n      });\n\n      $scope.infoedit = function () {\n        $scope.flag = true;\n\n        var editmsg = {};\n\n        editmsg.username = $scope.username;\n        editmsg.gender = $scope.gender;\n        editmsg.school = $scope.school;\n        editmsg.room = $scope.room;\n        editmsg.telLong = $scope.telLong;\n        editmsg.telShort = $scope.telShort;\n        editmsg.email = $scope.email;\n\n        userinfo.edit(editmsg).then(function (response) {\n          userService.cookieset(response.data.token);\n\n          if (userService.result(response.data.code)) {\n            alertbox('success', '个人资料修改成功');\n\n            setTimeout(function () {\n              location.href = '#/user/info';\n            }, 1500);\n          } else {\n            alertbox('danger', userService.hint(response.data.code));\n          }\n\n          $scope.flag = false;\n        });\n      };\n    }\n  });\n});\n\nangular.module('app').config(function ($stateProvider) {\n  $stateProvider.state('user.info', {\n    url: '/info',\n    templateUrl: 'templates/user/info-detail.html',\n    controller: function controller($scope, userinfo, userService) {\n      if (userService.logincheck() == null) {\n        location.href = '#/login';\n      }\n\n      moreMenu();\n      naviSecondery(0);\n\n      userinfo.show().then(function (response) {\n        userService.cookieset(response.data.token);\n\n        if (userService.result(response.data.code)) {\n          $scope.content = response.data.data;\n        }\n      });\n    }\n  });\n});\n\nangular.module('app').service('userService', function ($http, $cookies) {\n  return {\n    login: function login(editmsg) {\n      var user = {};\n\n      user.studentno = editmsg.studentNo;\n      user.password = md5(editmsg.password);\n\n      return $http.post(host + 'Login', user);\n      // return $http.post('http://localhost/angular/crewManageEvolve/test.php',user)\n    },\n\n    logincheck: function logincheck() {\n      return token = $cookies.get('token');\n    },\n\n    logout: function logout(user) {\n      var timestamp = new Date().getTime();\n      var token = $cookies.get('token');\n      var auth = token + '.' + timestamp + '.' + encrypt(token + ':' + timestamp);\n\n      $http.post(host + 'User/logout', auth);\n\n      $cookies.remove('token');\n    },\n\n    auth: function auth() {\n      var timestamp = new Date().getTime();\n      var token = $cookies.get('token');\n      var auth = token + '.' + timestamp + '.' + encrypt(token + ':' + timestamp);\n\n      return auth;\n    },\n\n    cookieset: function cookieset(editmsg) {\n      var date = new Date();\n      date.setDate(date.getDate() + 7);\n      var expire = date;\n\n      $cookies.put('token', editmsg, { 'expires': expire });\n\n      return true;\n    },\n\n    result: function result(editmsg) {\n      switch (editmsg) {\n        case 101:\n          // alert(\"存在未输入项\")\n          return false;\n          break;\n\n        case 102:\n          // alert(\"账号错误\")\n          return false;\n          break;\n\n        case 103:\n          // alert(\"密码错误\");、\n          return false;\n          break;\n\n        case 104:\n          // alert(\"宿舍号有误\")\n          return false;\n          break;\n\n        case 105:\n          // alert(\"新旧密码相同\")\n          return false;\n          break;\n\n        case 106:\n          // alert(\"确认密码不一致\")\n          return false;\n          break;\n\n        case 107:\n          // alert(\"旧密码错误\")\n          return false;\n          break;\n\n        case 108:\n          // alert(\"操作对象不能包含自己\")\n          return false;\n          break;\n\n        case 200:\n          return true;\n          break;\n\n        case 201:\n          // alert(\"请先完善个人资料\")\n          location.href = '#/user/infoedit';\n          return false;\n          break;\n\n        case 202:\n          // alert(\"部分添加成功,未成功条目已在学号框中呈现,请检查输入\")\n          return false;\n          break;\n\n        case 302:\n          alert('账号异常，请重新登录');\n          location.href = '#/login';\n          return false;\n          break;\n\n        case 403:\n          // alert(\"你不具有操作权限\")\n          return false;\n          break;\n\n        case 404:\n          // alert(\"你不具有查看权限\")\n          //\thistory.back()\n          return false;\n          break;\n\n        case 500:\n          // alert(\"未知错误\")\n          return false;\n          break;\n      }\n    },\n\n    hint: function hint(editmsg) {\n      switch (editmsg) {\n        case 101:\n          // alert(\"存在未输入项\")\n          return '存在未输入项';\n          break;\n\n        case 102:\n          return '账号或密码错误';\n          break;\n\n        case 103:\n          // location.href = '#/login'\n          return '账号或密码错误, 如忘记密码请咨询部长';\n          break;\n\n        case 104:\n          // alert(\"宿舍号有误\")\n          return '宿舍号有误';\n          break;\n\n        case 105:\n          // alert(\"新旧密码相同\")\n          return '新旧密码相同';\n          break;\n\n        case 106:\n          // alert(\"确认密码不一致\")\n          return '确认密码不一致';\n          break;\n\n        case 107:\n          // alert(\"旧密码错误\")\n          return '旧密码错误';\n          break;\n\n        case 108:\n          // alert(\"操作对象不能包含自己\")\n          return '操作对象不能包含自己';\n          break;\n\n        case 201:\n          // alert(\"用户资料未完善\")\n          return '请先完善个人资料';\n          break;\n\n        case 202:\n          // alert(\"部分添加成功,未成功条目已在学号框中呈现,请检查输入\")\n          return '部分添加成功，未成功条目已在输入框中列出，请检查';\n          break;\n\n        case 302:\n          // alert(\"账号异常，请重新登录\")\n          return '';\n          break;\n\n        case 403:\n          // alert(\"你不具有操作权限\")\n          return '你不具有该操作权限';\n          break;\n\n        case 404:\n          // alert(\"你不具有查看权限\")\n          //\thistory.back()\n          return '你不具有该查看权限';\n          break;\n\n        case 500:\n          // alert(\"未知错误\")\n          return '未知错误';\n          break;\n      }\n    }\n\n  };\n});\n\nangular.module('app').service('dprtall', function ($http, userService) {\n  return {\n    show: function show() {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n\n      return $http.post(host + 'Department/listAll', postdata);\n    },\n\n    editshow: function editshow(editmsg) {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'Department/detail', postdata);\n    },\n\n    edit: function edit(editmsg) {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'Department/edit', postdata);\n    } // ,\n\n    // add: function(editmsg){\n\n    // \tvar postdata = {}\n\n    // \tpostdata.auth = userService.auth()\n    // \tpostdata.data = editmsg\n\n    // \treturn $http.post(host + 'Department/add',postdata)\n\n    // \t},\n\n    // del: function(editmsg){\n\n    // \tvar postdata = {}\n\n    // \tpostdata.auth = userService.auth()\n    // \tpostdata.data = editmsg\n\n    // \treturn $http.post(host + 'Department/del',postdata)\n\n    // \t}\n\n  };\n});\n\nangular.module('app').service('listall', function ($http, userService) {\n  return {\n    show: function show(editmsg) {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/listall', postdata);\n    },\n\n    detail: function detail(editmsg) {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/othersinfo', postdata);\n    }\n\n  };\n});\n\nangular.module('app').service('listdprt', function ($http, userService) {\n  return {\n    show: function show() {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n\n      return $http.post(host + 'User/dprtall', postdata);\n    },\n\n    addshow: function addshow() {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n\n      return $http.post(host + 'User/getUnCompleted', postdata);\n    },\n\n    resetshow: function resetshow(editmsg) {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/pwApply', postdata);\n    },\n\n    add: function add(editmsg) {\n      var postdata = {};\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/batchAdd', postdata);\n    },\n\n    rcl: function rcl(editmsg) {\n      var postdata = {};\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/rcl', postdata);\n    },\n\n    position: function position(editmsg) {\n      var postdata = {};\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/groupChange', postdata);\n    },\n\n    reset: function reset(editmsg) {\n      var postdata = {};\n      postdata.data = {};\n\n      postdata.auth = userService.auth();\n      postdata.data.id = editmsg.id;\n      postdata.data.pw = md5(editmsg.pw);\n      postdata.data.pwcfrm = md5(editmsg.pwcfrm);\n\n      return $http.post(host + 'User/pwReset', postdata);\n    }\n\n  };\n});\n\nangular.module('app').service('listrcl', function ($http, userService) {\n  return {\n    show: function show(editmsg) {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/listRcl', postdata);\n    },\n\n    del: function del(editmsg) {\n      var postdata = {};\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/del', postdata);\n    },\n\n    recover: function recover(editmsg) {\n      var postdata = {};\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/recover', postdata);\n    }\n\n  };\n});\n\nangular.module('app').service('userinfo', function ($http, userService) {\n  return {\n    show: function show() {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n\n      return $http.post(host + 'User/info', postdata);\n    },\n\n    edit: function edit(editmsg) {\n      var postdata = {};\n\n      postdata.auth = userService.auth();\n      postdata.data = editmsg;\n\n      return $http.post(host + 'User/infoEdit', postdata);\n    },\n\n    password: function password(editmsg) {\n      var postdata = {};\n      postdata.data = {};\n\n      postdata.auth = userService.auth();\n      postdata.data.old = md5(editmsg.old);\n      postdata.data.new = md5(editmsg.new);\n      postdata.data.cfrm = md5(editmsg.cfrm);\n\n      return $http.post(host + 'User/pwEdit', postdata);\n    }\n\n  };\n});\n\nangular.module('app').directive('logoutBtn', function (userService) {\n  return {\n    restrict: 'A',\n    link: function link(scope, element, attrs) {\n      element.bind('click', function () {\n        scope.flag = true;\n\n        userService.logout();\n\n        location.href = '#/login';\n      });\n    }\n  };\n});","angular.module('app', ['ui.router', 'ngCookies', 'ui.bootstrap'])\n  .config(['$httpProvider', function ($httpProvider) {\n    $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8'\n\n    var param = function (obj) {\n      var query = '', name, value, fullSubName, subName, subValue, innerObj, i\n\n      for (name in obj) {\n        value = obj[name]\n\n        if (value instanceof Array) {\n          for (i = 0; i < value.length; ++i) {\n            subValue = value[i]\n            fullSubName = name + '[' + i + ']'\n            innerObj = {}\n            innerObj[fullSubName] = subValue\n            query += param(innerObj) + '&'\n          }\n        }\n        else if (value instanceof Object) {\n          for (subName in value) {\n            subValue = value[subName]\n            fullSubName = name + '[' + subName + ']'\n            innerObj = {}\n            innerObj[fullSubName] = subValue\n            query += param(innerObj) + '&'\n          }\n        }\n        else if (value !== undefined && value !== null)\n          query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&'\n      }\n\n      return query.length ? query.substr(0, query.length - 1) : query\n    }\n\n    // Override $http service's default transformRequest\n    $httpProvider.defaults.transformRequest = [function (data) {\n      return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data\n    }]\n  }])\n\n// var host = 'http://125.216.250.105/bbter/index.php/Home/' \n// var host = 'http://192.168.1.120/bbter/index.php/Home/' \nvar host = 'http://222.201.132.27/bbter-all/index.php/Home/'\n\nnew Image().src = 'img/TZH.png'\nnew Image().src = 'img/TMH.png'\nnew Image().src = 'img/checked.png'\n\nfunction encrypt (msg) {\n  return sodium.crypto_box_easy(msg, sodium.from_hex(nonce), sodium.from_hex(pk), sodium.from_hex(sk), 'hex')\n\n}\n\nvar school = [  {'name': '请选择','value': ''},\n  {'name': 'C.材料科学与工程学院','value': '材料科学与工程学院'},\n  {'name': 'D.电子与信息学院','value': '电子与信息学院'},\n  {'name': 'D.电力学院','value': '电力学院'},\n  {'name': 'F.法学院(知识产权学院)','value': '法学院(知识产权学院)'},\n  {'name': 'G.国际教育学院','value': '国际教育学院'},\n  {'name': 'G.工商管理学院(创业教育学院)','value': '工商管理学院(创业教育学院)'},\n  {'name': 'G.公共管理学院','value': '公共管理学院'},\n  {'name': 'H.环境与能源学院','value': '环境与能源学院'},\n  {'name': 'H.化学与化工学院','value': '化学与化工学院'},\n  {'name': 'J.机械与汽车工程学院','value': '机械与汽车工程学院'},\n  {'name': 'J.计算机科学与工程学院','value': '计算机科学与工程学院'},\n  {'name': 'J.建筑学院','value': '建筑学院'},\n  {'name': 'J.经济与贸易学院','value': '经济与贸易学院'},\n  {'name': 'L.理学院(数学系 物理系)','value': '理学院(数学系 物理系)'},\n  {'name': 'Q.轻工与食品学院','value': '轻工与食品学院'},\n  {'name': 'R.软件学院','value': '软件学院'},\n  {'name': 'S.生物科学与工程学院','value': '生物科学与工程学院'},\n  {'name': 'S.思想政治学院','value': '思想政治学院'},\n  {'name': 'S.设计学院','value': '设计学院'},\n  {'name': 'T.土木与交通学院','value': '土木与交通学院'},\n  {'name': 'T.体育学院','value': '体育学院'},\n  {'name': 'W.外国语学院','value': '外国语学院'},\n  {'name': 'X.新闻与传播学院','value': '新闻与传播学院'},\n  {'name': 'Y.艺术学院','value': '艺术学院'},\n  {'name': 'Y.医学院','value': '医学院'},\n  {'name': 'Z.自动化科学与工程学院','value': '自动化科学与工程学院'},\n]\n\nvar gender = [  {'name': '请选择','value': ''},\n  {'name': '男','value': '男'},\n  {'name': '女','value': '女'}\n]\n\nvar dprt = [    {'name': '所有部门','value': ''},\n  {'name': '编辑部','value': '编辑部'},\n  {'name': '策划推广部','value': '策划推广部'},\n  {'name': '技术部','value': '技术部'},\n  {'name': '节目部','value': '节目部'},\n  {'name': '人力资源部','value': '人力资源部'},\n  {'name': '视觉设计部','value': '视觉设计部'},\n  {'name': '视频部','value': '视频部'},\n  {'name': '外联部','value': '外联部'},\n  {'name': '综合管理部','value': '综合管理部'},\n  {'name': '综合新闻部','value': '综合新闻部'}\n]\n\nvar position = [    {'name': '所有职位','value': ''},\n  {'name': '干事','value': '干事'},\n  {'name': '主管','value': '主管'},\n  {'name': '部长','value': '部长'},\n  {'name': '常委','value': '常委'}\n]\n\nvar superposition = [    {'name': '干事','value': '干事'},\n  {'name': '主管','value': '主管'},\n  {'name': '部长','value': '部长'},\n  {'name': '常委','value': '常委'},\n  {'name': '超级管理员','value': '超级管理员'}\n]\n","function footer () {\n  var x = window.innerWidth\n  if (x >= 1600) {\n    document.getElementById('body').style.minHeight = window.innerHeight - 272 + 'px'\n  } else {\n    document.getElementById('body').style.minHeight = window.innerHeight - 240 + 'px'\n  }\n}\nfunction naviSecondery (num) {\n  var naviSecondery = document.getElementsByClassName('naviSeconderyBtn')\n  for (var x = 0;x < naviSecondery.length;x++) {\n    if (x != num) {\n      naviSecondery[x].setAttribute('class', 'naviSeconderyBtn fontNormal')\n    } else {\n      naviSecondery[x].setAttribute('class', 'naviSeconderyBtn fontNormal naviSeconderyBtnActive')\n    }\n  }\n}\nfunction moreMenu () {\n  var menu = document.getElementById('moreMenu')\n  var moreBtn = document.getElementById('moreBtn')\n  document.addEventListener('click', function (e) {\n    if (moreBtn == e.target && menu.style.display == 'none') {\n      menu.style.display = 'block'\n      setTimeout(function () {\n        menu.style.opacity = '1'\n      }, 0)\n    }\n    if (moreBtn != e.target && menu.style.display == 'block') {\n      menu.style.opacity = '0'\n      setTimeout(function () {\n        menu.style.display = 'none'\n      }, 200)\n    }\n  })\n}\nfunction optionMenu () {\n  var optionMenu = document.getElementById('optionMenu')\n  var optionBtn = document.getElementById('optionBtn')\n  var cfrm = document.getElementsByClassName('txtBtn')\n  document.addEventListener('mousedown', function (e) {\n    if (optionBtn == e.target && optionMenu.style.display == 'none') {\n      setTimeout(function () {\n        optionMenu.style.display = 'block'\n      }, 1)\n      setTimeout(function () {\n        optionMenu.style.opacity = '1'\n      }, 2)\n    }\n    if (((optionMenu != e.target && optionMenu != e.target.parentNode && optionMenu != e.target.parentNode.parentNode) || cfrm[0] == e.target || cfrm[1] == e.target) && optionMenu.style.display == 'block') {\n      console.log(e.target)\n      optionMenu.style.opacity = '0'\n      setTimeout(function () {\n        optionMenu.style.display = 'none'\n      }, 201)\n    }\n  })\n}\nfunction listCheck (o) {\n  if (o.checked) {\n    o.parentNode.style.backgroundImage = 'url(img/checked.png)'\n  } else {\n    o.parentNode.style.backgroundImage = 'url(img/unchecked.png)'\n  }\n}\nfunction secretShow () {\n  var hl = document.getElementById('loginLeft')\n  var hr = document.getElementById('loginRight')\n  var secretInput = document.getElementById('secret')\n  hl.src = 'img/TZ.png'\n  hr.src = 'img/TM.png'\n}\nfunction secretHide () {\n  var hl = document.getElementById('loginLeft')\n  var hr = document.getElementById('loginRight')\n  var secretInput = document.getElementById('secret')\n  hl.src = 'img/TZH.png'\n  hr.src = 'img/TMH.png'\n}\nfunction radio (o) {\n  o.parentNode.style.backgroundImage = 'url(img/checked.png)'\n  var radios = document.getElementsByTagName('label')\n  for (var x = 0;x < radios.length;x++) {\n    if (radios[x] != o.parentNode) {\n      radios[x].style.backgroundImage = 'url(img/unchecked.png)'\n    }\n  }\n\n}\n","angular.module('app')\n  .config(function ($stateProvider, $urlRouterProvider) {\n    $urlRouterProvider.when('', '/user/info')\n      .when('/user', '/user/info')\n      .when('/list', '/list/all/&&/1')\n      .when('/dprt', '/dprt/all')\n\n    $stateProvider\n      .state('user', {\n        abstract: true,\n        url: '/user',\n        templateUrl: 'templates/navi/navi-user.html'\n      })\n      .state('list', {\n        url: '/list',\n        abstract: true,\n        templateUrl: 'templates/navi/navi-list.html'\n      })\n      .state('dprt', {\n        url: '/dprt',\n        abstract: true,\n        templateUrl: 'templates/navi/navi-dprt.html'\n      })\n      .state('login', {\n        url: '/login',\n        templateUrl: 'templates/login.html',\n        controller: function ($scope, $cookies, userService) {\n          $scope.alerts = []\n\n          function alertbox (type, msg) {\n            if ($scope.alerts != []) {\n              $scope.alerts.splice(0, 1)\n\n            }\n\n            $scope.alerts.push({type: type, msg: msg})\n\n          }\n\n          $scope.closeAlert = function (index) {\n            $scope.alerts.splice(index, 1)\n\n          }\n\n          $scope.update = function () {\n            $scope.flag = true\n\n            var user = {}\n\n            user.studentNo = $scope.studentNo\n            user.password = $scope.password\n\n            userService.login(user)\n              .then(function (response) {\n                userService.cookieset(response.data.token)\n\n                if (userService.result(response.data.code) || response.data.code == 201) {\n                  location.href = '#/user'\n\n                } else {\n                  alertbox('danger', userService.hint(response.data.code))\n\n                }\n\n                $scope.flag = false\n\n              })\n\n          }\n        }\n      })\n\n\n\n  })\n","angular.module('app')\n  .config(function ($stateProvider) {\n    $stateProvider\n\n      .state('dprt.all', {\n        url: '/all',\n        templateUrl: 'templates/department/department-all.html',\n        controller: function ($scope, userService, dprtall) {\n          if (userService.logincheck() == null) {\n            location.href = '#/login'\n          }\n\n          moreMenu()\n          $scope.alerts = []\n\n          function alertbox (type, msg) {\n            if ($scope.alerts != []) {\n              $scope.alerts.splice(0, 1)\n\n            }\n\n            $scope.alerts.push({type: type, msg: msg})\n\n          }\n\n          $scope.closeAlert = function (index) {\n            $scope.alerts.splice(index, 1)\n\n          }\n\n          function show () {\n            dprtall.show()\n              .then(function (response) {\n                userService.cookieset(response.data.token)\n\n                if (userService.result(response.data.code)) {\n                  $scope.dprts = response.data.data.dprt\n                  $scope.editor = response.data.data.editor\n\n                } else {\n                  alertbox('danger', userService.hint(response.data.code))\n\n                }\n\n              })\n          }\n\n          show()\n\n          $scope.radio = {}\n\n          $scope.edit = function () {\n            if ($scope.radio.dprt != undefined) {\n              location.href = '#/dprt/edit/' + $scope.radio.dprt\n\n            } else {\n              alertbox('danger', '请选择操作对象')\n\n            }\n\n          }\n\n          $scope.isEdit = function (value) {\n            if (value) {\n              return true\n\n            } else {\n              return false\n\n            }\n\n          }\n\n          // $scope.del = function(){\n\n          // \tvar editmsg = {}\n\n          // \teditmsg.id = $scope.radio.dprt\n\n          // \tif(editmsg.id != undefined){\n\n          // \t\tdprtall.del(editmsg)\n          // \t\t\t.then(function(response){\n\n          // \t\t\tuserService.cookieset(response.data.token)\n\n          // \t\t\tif(userService.result(response.data.code)){\n\n          // \t\t\t\talert(\"success\")\n          // \t\t\t\tshow()\n\n          // \t\t\t}\n          // \t\t})\n\n          // \t} else {\n\n          // \t\talert(\"请选择对象\")\n\n          // \t}\n\n\n          // }\n\n\n\n        }\n      })\n\n  })\n","angular.module('app')\n  .config(function ($stateProvider) {\n    $stateProvider\n\n      .state('dprt.add', {\n        url: '/add',\n        templateUrl: 'templates/department/department-add.html',\n        controller: function ($scope, userService, dprtall) {\n          if (userService.logincheck() == null) {\n            location.href = '#/login'\n          }\n\n          moreMenu()\n          $scope.add = function () {\n            $scope.flag = true\n\n            var editmsg = {}\n\n            editmsg.dprtname = $scope.dprtname\n            editmsg.dprtnote = $scope.dprtnote\n\n            dprtall.add(editmsg)\n              .then(function (response) {\n                userService.cookieset(response.data.token)\n\n                if (userService.result(response.data.code)) {\n                  alert('success')\n                  location.href = '#/dprt/all'\n\n                }\n\n                $scope.flag = true\n\n              })\n\n          }\n\n        }\n      })\n\n  })\n","angular.module('app')\n  .config(function ($stateProvider) {\n    $stateProvider\n\n      .state('dprt.edit', {\n        url: '/edit/:id',\n        templateUrl: 'templates/department/department-edit.html',\n        controller: function ($scope, $stateParams, userService, dprtall) {\n          if (userService.logincheck() == null) {\n            location.href = '#/login'\n          }\n\n          moreMenu()\n          $scope.alerts = []\n\n          function alertbox (type, msg) {\n            if ($scope.alerts != []) {\n              $scope.alerts.splice(0, 1)\n\n            }\n\n            $scope.alerts.push({type: type, msg: msg})\n\n          }\n\n          $scope.closeAlert = function (index) {\n            $scope.alerts.splice(index, 1)\n\n          }\n\n          var request = {}\n\n          request.id = $stateParams.id\n\n          dprtall.editshow(request)\n            .then(function (response) {\n              userService.cookieset(response.data.token)\n\n              if (userService.result(response.data.code)) {\n                $scope.content = response.data.data\n\n                $scope.dprtname = $scope.content.dprtname\n                $scope.dprtnote = $scope.content.dprtnote\n\n              } else {\n                alertbox('danger', userService.hint(response.data.code))\n\n              }\n            })\n\n          $scope.edit = function () {\n            $scope.flag = true\n\n            var editmsg = {}\n\n            editmsg.id = request.id\n            editmsg.dprtname = $scope.dprtname\n            editmsg.dprtnote = $scope.dprtnote\n\n            dprtall.edit(editmsg)\n              .then(function (response) {\n                userService.cookieset(response.data.token)\n\n                if (userService.result(response.data.code)) {\n                  alertbox('success', '部门资料修改成功')\n\n                  setTimeout(function () { location.href = '#/dprt/all' }, 1500)\n\n                } else {\n                  alertbox('danger', userService.hint(response.data.code))\n\n                }\n\n                $scope.flag = true\n\n              })\n\n          }\n        }\n\n      })\n  })\n","angular.module('app')\n\n  .service('listall', function ($http, userService) {\n    return {\n      show: function (editmsg) {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/listall', postdata)\n\n      },\n\n      detail: function (editmsg) {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/othersinfo', postdata)\n\n      }\n\n\n\n    }\n  })\n","angular.module('app')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('list.detail', {\n        url: '/detail/:id',\n        templateUrl: 'templates/list/list-detail.html',\n        controller: function ($scope, $stateParams, listall, listdprt, userService) {\n          if (userService.logincheck() == null) {\n            location.href = '#/login'\n          }\n\n          moreMenu()\n          naviSecondery(0)\n\n          $scope.alerts = []\n\n          function alertbox (type, msg) {\n            if ($scope.alerts != []) {\n              $scope.alerts.splice(0, 1)\n\n            }\n\n            $scope.alerts.push({type: type, msg: msg})\n\n          }\n\n          $scope.closeAlert = function (index) {\n            $scope.alerts.splice(index, 1)\n\n          }\n\n          $scope.positionopt = superposition\n\n          function showdetail () {\n            listall.detail($stateParams)\n              .then(function (response) {\n                userService.cookieset(response.data.token)\n\n                if (userService.result(response.data.code)) {\n                  $scope.content = response.data.data.content\n                  $scope.editor = response.data.data.editor\n\n                  $scope.position = $scope.content.position\n\n                } else {\n                  alertbox('danger', userService.hint(response.data.code))\n\n                }\n              })\n          }\n\n          showdetail()\n\n          $scope.isEdit = function (value) {\n            if (value) {\n              return true\n\n            } else {\n              return false\n\n            }\n\n          }\n\n          $scope.changeposition = function () {\n            $scope.flag = true\n\n            var editmsg = {}\n\n            editmsg.id = $stateParams.id\n\n            editmsg.position = $scope.position\n\n            listdprt.position(editmsg)\n              .then(function (response) {\n                userService.cookieset(response.data.token)\n\n                if (userService.result(response.data.code)) {\n                  alertbox('success', '修改职位成功')\n                  showdetail()\n                  setTimeout(function () { history.back(); }, 1500)\n\n                } else {\n                  alertbox('danger', userService.hint(response.data.code))\n\n                }\n\n                $scope.flag = false\n\n              })\n\n          }\n        }\n      })\n\n  })\n","angular.module('app')\n\n  .service('listdprt', function ($http, userService) {\n    return {\n      show: function () {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n\n        return $http.post(host + 'User/dprtall', postdata)\n\n      },\n\n      addshow: function () {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n\n        return $http.post(host + 'User/getUnCompleted', postdata)\n\n      },\n\n      resetshow: function (editmsg) {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/pwApply', postdata)\n\n      },\n\n      add: function (editmsg) {\n        var postdata = {}\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/batchAdd', postdata)\n\n      },\n\n      rcl: function (editmsg) {\n        var postdata = {}\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/rcl', postdata)\n\n      },\n\n      position: function (editmsg) {\n        var postdata = {}\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/groupChange', postdata)\n\n      },\n\n      reset: function (editmsg) {\n        var postdata = {}\n        postdata.data = {}\n\n        postdata.auth = userService.auth()\n        postdata.data.id = editmsg.id\n        postdata.data.pw = md5(editmsg.pw)\n        postdata.data.pwcfrm = md5(editmsg.pwcfrm)\n\n        return $http.post(host + 'User/pwReset', postdata)\n\n      }\n\n    }\n  })\n","angular.module('app')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('list.add', {\n        url: '/add',\n        templateUrl: 'templates/list/list-add.html',\n        controller: function ($scope, listdprt, userService) {\n          if (userService.logincheck() == null) {\n            location.href = '#/login'\n          }\n\n          moreMenu()\n          naviSecondery(1)\n\n          $scope.alerts = []\n\n          function alertbox (type, msg) {\n            if ($scope.alerts != []) {\n              $scope.alerts.splice(0, 1)\n\n            }\n\n            $scope.alerts.push({type: type, msg: msg})\n\n          }\n\n          $scope.closeAlert = function (index) {\n            $scope.alerts.splice(index, 1)\n\n          }\n\n          $scope.position = '干事'\n\n          function showuncompleted () {\n            listdprt.addshow()\n              .then(function (response) {\n                userService.cookieset(response.data.token)\n\n                if (userService.result(response.data.code)) {\n                  $scope.uncompleteds = response.data.data.uncompleteds\n\n                } else {\n                  alertbox('danger', userService.hint(response.data.code))\n\n                }\n              })\n\n          }\n\n          showuncompleted()\n\n          $scope.add = function () {\n            var str1 = document.getElementById('studentNo').innerHTML\n            var str2 = str1.replace(/\\<\\/span><span style=\"-webkit-text-stroke-width: 0.2px;\"><br><\\/span>\\<\\/div><div style=\"-webkit-text-stroke-width: 0.2px;\"><span style=\"-webkit-text-stroke-width: 0.2px;\">/g, '.').replace(/\\<span style=\"-webkit-text-stroke-width: 0.2px;\"\\>/g, '').replace(/\\<\\/span\\>\\<br style=\"-webkit-text-stroke-width: 0.2px;\"\\>\\<div style=\"-webkit-text-stroke-width: 0.2px;\"\\>/g, '').replace(/<\\/span><\\/div>/g, '').replace(/<\\/span><div style=\"-webkit-text-stroke-width: 0.2px;\">/g, '').replace(/<div style=\"-webkit-text-stroke-width: 0.2px;\"><br>/g, '').replace(/<div style=\"-webkit-text-stroke-width: 0.2px;\">/g, '').replace(/<br>/g, '').replace(/<\\/span>/g, '.').replace(/<\\/div>/g, '').replace(/<div>/g, '').replace(/<span>/g, '')\n\n            // console.log(str2)\n\n            $scope.flag = true\n\n            var editmsg = {}\n\n            editmsg.studentno = str2\n            editmsg.position = $scope.position\n\n            listdprt.add(editmsg)\n              .then(function (response) {\n                userService.cookieset(response.data.token)\n\n                if (userService.result(response.data.code)) {\n                  alertbox('success', '添加新成员成功，请在部门列表查看')\n\n                  setTimeout(function () { location.href = '#/list/dprt'; }, 1500)\n\n                } else {\n                  alertbox('danger', userService.hint(response.data.code))\n\n                  var fail = response.data.data.failed\n\n                  function failedno (fail) {\n                    var sn = ''\n\n                    for (x = 0;x < response.data.data.failed.length;x++) {\n                      sn += response.data.data.failed[x] + '\\r'\n\n                    }\n\n                    return sn\n\n                  }\n\n                  $scope.studentno = failedno()\n\n                  showuncompleted()\n\n                }\n\n                $scope.flag = false\n              })\n\n            $scope.flag = false\n          }\n\n        }\n      })\n\n  })\n","angular.module('app')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('list.reset', {\n        url: '/reset/:id',\n        templateUrl: 'templates/list/list-resetpw.html',\n        controller: function ($scope, $stateParams, listdprt, userService) {\n          if (userService.logincheck() == null) {\n            location.href = '#/login'\n          }\n\n          moreMenu()\n          naviSecondery(1)\n\n          $scope.alerts = []\n\n          function alertbox (type, msg) {\n            if ($scope.alerts != []) {\n              $scope.alerts.splice(0, 1)\n\n            }\n\n            $scope.alerts.push({type: type, msg: msg})\n\n          }\n\n          $scope.closeAlert = function (index) {\n            $scope.alerts.splice(index, 1)\n\n          }\n\n          var idrequest = {}\n          idrequest.id = $stateParams.id\n\n          listdprt.resetshow(idrequest)\n            .then(function (response) {\n              userService.cookieset(response.data.token)\n\n              if (userService.result(response.data.code)) {\n                alertbox('', '此操作将修改对象的密码，无法撤销')\n\n                $scope.members = response.data.data.members\n\n              } else {\n                if (response.data.code == 108) {\n                  setTimeout(function () { history.back(); }, 1500)\n\n                }\n\n                alertbox('danger', userService.hint(response.data.code))\n\n              }\n\n            })\n\n          $scope.reset = function () {\n            if ($scope.newpw == $scope.cfrmpw) {\n              if (window.confirm('确认强制修改密码吗?')) {\n                $scope.flag = true\n\n                var editmsg = {}\n\n                editmsg.id = idrequest.id\n                editmsg.pw = $scope.newpw\n                editmsg.pwcfrm = $scope.cfrmpw\n\n                listdprt.reset(editmsg)\n                  .then(function (response) {\n                    userService.cookieset(response.data.token)\n\n                    if (userService.result(response.data.code)) {\n                      alertbox('success', '强制修改密码成功')\n\n                      setTimeout(function () { location.href = '#/list/dprt'; }, 1500)\n\n                    } else {\n                      alertbox('danger', userService.hint(response.data.code))\n\n                    }\n\n                    $scope.flag = false\n\n                  });}\n\n            } else {\n              alertbox('danger', '确认密码不一致')\n\n            }\n\n          }}\n\n      })\n\n  })\n","angular.module('app')\n\n  .service('listrcl', function ($http, userService) {\n    return {\n      show: function (editmsg) {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/listRcl', postdata)\n\n      },\n\n      del: function (editmsg) {\n        var postdata = {}\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/del', postdata)\n      },\n\n      recover: function (editmsg) {\n        var postdata = {}\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/recover', postdata)\n      }\n\n    }\n  }\n)\n","angular.module('app')\n  .config(function ($stateProvider) {\n    $stateProvider\n      .state('user.pw', {\n        url: '/pwedit',\n        templateUrl: 'templates/user/password-edit.html',\n        controller: function ($scope, userinfo, userService) {\n          if (userService.logincheck() == null) {\n            location.href = '#/login'\n          }\n\n          moreMenu()\n          naviSecondery(2)\n\n          $scope.alerts = []\n\n          function alertbox (type, msg) {\n            if ($scope.alerts != []) {\n              $scope.alerts.splice(0, 1)\n\n            }\n\n            $scope.alerts.push({type: type, msg: msg})\n\n          }\n\n          $scope.closeAlert = function (index) {\n            $scope.alerts.splice(index, 1)\n\n          }\n\n          $scope.pwedit = function () {\n            if ($scope.newpw == $scope.cfrmpw && $scope.oldpw != $scope.newpw) {\n              if (window.confirm('确认修改密码吗?')) {\n                $scope.flag = true\n\n                var editmsg = {}\n\n                editmsg.old = $scope.oldpw\n                editmsg.new = $scope.newpw\n                editmsg.cfrm = $scope.cfrmpw\n\n                userinfo.password(editmsg)\n                  .then(function (response) {\n                    userService.cookieset(response.data.token)\n\n                    if (userService.result(response.data.code)) {\n                      alertbox('success', '密码修改成功,请重新登录')\n\n                      setTimeout(function () {\n                        userService.logout()\n                        location.href = '#/login'\n                      }, 1500)\n\n                    } else {\n                      alertbox('danger', userService.hint(response.data.code))\n\n                    }\n\n                    $scope.flag = false\n\n                  })\n\n              }\n\n            } else {\n              if ($scope.oldpw == $scope.newpw) {\n                alertbox('danger', '新旧密码相同')\n\n              }\n              if ($scope.newpw != $scope.cfrmpw) {\n                alertbox('danger', '确认密码不一致')\n\n              }\n\n            }\n\n          }\n\n        }\n      })\n\n  })\n","angular.module('app')\n  .config(function ($stateProvider) {\n    $stateProvider\n\n      .state('user.edit', {\n        url: '/infoedit',\n        templateUrl: 'templates/user/info-edit.html',\n        controller: function ($scope, userinfo, userService) {\n          if (userService.logincheck() == null) {\n            location.href = '#/login'\n          }\n\n          moreMenu()\n          naviSecondery(1)\n\n          $scope.alerts = []\n\n          function alertbox (type, msg) {\n            if ($scope.alerts != []) {\n              $scope.alerts.splice(0, 1)\n\n            }\n\n            $scope.alerts.push({type: type, msg: msg})\n\n          }\n\n          $scope.closeAlert = function (index) {\n            $scope.alerts.splice(index, 1)\n\n          }\n\n          userinfo.show()\n            .then(function (response) {\n              $scope.genderopt = gender\n              $scope.schoolopt = school\n\n              userService.cookieset(response.data.token)\n\n              if (response.data.code == 200) {\n                $scope.content = response.data.data\n\n                $scope.username = $scope.content.username\n                $scope.room = $scope.content.room\n                $scope.telLong = $scope.content.telLong\n                $scope.telShort = $scope.content.telShort\n                $scope.email = $scope.content.email\n\n                $scope.gender = $scope.content.gender\n                $scope.school = $scope.content.school\n\n              } else {\n                if (response.data.code == 201) {\n                  alertbox('', userService.hint(response.data.code))\n\n                  $scope.gender = ''\n                  $scope.school = ''\n\n                }\n\n              }\n            })\n\n          $scope.infoedit = function () {\n            $scope.flag = true\n\n            var editmsg = {}\n\n            editmsg.username = $scope.username\n            editmsg.gender = $scope.gender\n            editmsg.school = $scope.school\n            editmsg.room = $scope.room\n            editmsg.telLong = $scope.telLong\n            editmsg.telShort = $scope.telShort\n            editmsg.email = $scope.email\n\n            userinfo.edit(editmsg)\n              .then(function (response) {\n                userService.cookieset(response.data.token)\n\n                if (userService.result(response.data.code)) {\n                  alertbox('success', '个人资料修改成功')\n\n                  setTimeout(function () { location.href = '#/user/info' }, 1500)\n\n                } else {\n                  alertbox('danger', userService.hint(response.data.code))\n\n                }\n\n                $scope.flag = false\n\n              })\n\n          }\n\n\n\n        }\n      })\n\n  })\n","angular.module('app')\n  .config(function ($stateProvider) {\n    $stateProvider\n\n      .state('user.info', {\n        url: '/info',\n        templateUrl: 'templates/user/info-detail.html',\n        controller: function ($scope, userinfo, userService) {\n          if (userService.logincheck() == null) {\n            location.href = '#/login'\n          }\n\n          moreMenu()\n          naviSecondery(0)\n\n          userinfo.show()\n            .then(function (response) {\n              userService.cookieset(response.data.token)\n\n              if (userService.result(response.data.code)) {\n                $scope.content = response.data.data\n\n              }\n            })\n\n        }\n      })\n\n\n  })\n","angular.module('app')\n\n  .service('userService', function ($http, $cookies) {\n    return {\n      login: function (editmsg) {\n        var user = {}\n\n        user.studentno = editmsg.studentNo\n        user.password = md5(editmsg.password)\n\n        return $http.post(host + 'Login', user)\n        // return $http.post('http://localhost/angular/crewManageEvolve/test.php',user)\n\n      },\n\n      logincheck: function () {\n        return token = $cookies.get('token')\n\n      },\n\n      logout: function (user) {\n        var timestamp = new Date().getTime()\n        var token = $cookies.get('token')\n        var auth = token + '.' + timestamp + '.' + encrypt(token + ':' + timestamp)\n\n        $http.post(host + 'User/logout', auth)\n\n        $cookies.remove('token')\n\n      },\n\n      auth: function () {\n        var timestamp = new Date().getTime()\n        var token = $cookies.get('token')\n        var auth = token + '.' + timestamp + '.' + encrypt(token + ':' + timestamp)\n\n        return auth\n\n      },\n\n      cookieset: function (editmsg) {\n        var date = new Date()\n        date.setDate(date.getDate() + 7)\n        var expire = date\n\n        $cookies.put('token', editmsg, { 'expires': expire})\n\n        return true\n\n      },\n\n      result: function (editmsg) {\n        switch (editmsg) {\n          case 101:\n            // alert(\"存在未输入项\")\n            return false\n            break\n\n          case 102:\n            // alert(\"账号错误\")\n            return false\n            break\n\n          case 103:\n            // alert(\"密码错误\");、\n            return false\n            break\n\n          case 104:\n            // alert(\"宿舍号有误\")\n            return false\n            break\n\n          case 105:\n            // alert(\"新旧密码相同\")\n            return false\n            break\n\n          case 106:\n            // alert(\"确认密码不一致\")\n            return false\n            break\n\n          case 107:\n            // alert(\"旧密码错误\")\n            return false\n            break\n\n          case 108:\n            // alert(\"操作对象不能包含自己\")\n            return false\n            break\n\n          case 200:\n            return true\n            break\n\n          case 201:\n            // alert(\"请先完善个人资料\")\n            location.href = '#/user/infoedit'\n            return false\n            break\n\n          case 202:\n            // alert(\"部分添加成功,未成功条目已在学号框中呈现,请检查输入\")\n            return false\n            break\n\n          case 302:\n            alert('账号异常，请重新登录')\n            location.href = '#/login'\n            return false\n            break\n\n          case 403:\n            // alert(\"你不具有操作权限\")\n            return false\n            break\n\n          case 404:\n            // alert(\"你不具有查看权限\")\n            //\thistory.back()\n            return false\n            break\n\n          case 500:\n            // alert(\"未知错误\")\n            return false\n            break\n        }\n\n\n\n      },\n\n      hint: function (editmsg) {\n        switch (editmsg) {\n          case 101:\n            // alert(\"存在未输入项\")\n            return '存在未输入项'\n            break\n\n          case 102:\n            return '账号或密码错误'\n            break\n\n          case 103:\n            // location.href = '#/login'\n            return '账号或密码错误, 如忘记密码请咨询部长'\n            break\n\n          case 104:\n            // alert(\"宿舍号有误\")\n            return '宿舍号有误'\n            break\n\n          case 105:\n            // alert(\"新旧密码相同\")\n            return '新旧密码相同'\n            break\n\n          case 106:\n            // alert(\"确认密码不一致\")\n            return '确认密码不一致'\n            break\n\n          case 107:\n            // alert(\"旧密码错误\")\n            return '旧密码错误'\n            break\n\n          case 108:\n            // alert(\"操作对象不能包含自己\")\n            return '操作对象不能包含自己'\n            break\n\n          case 201:\n            // alert(\"用户资料未完善\")\n            return '请先完善个人资料'\n            break\n\n          case 202:\n            // alert(\"部分添加成功,未成功条目已在学号框中呈现,请检查输入\")\n            return '部分添加成功，未成功条目已在输入框中列出，请检查'\n            break\n\n          case 302:\n            // alert(\"账号异常，请重新登录\")\n            return ''\n            break\n\n          case 403:\n            // alert(\"你不具有操作权限\")\n            return '你不具有该操作权限'\n            break\n\n          case 404:\n            // alert(\"你不具有查看权限\")\n            //\thistory.back()\n            return '你不具有该查看权限'\n            break\n\n          case 500:\n            // alert(\"未知错误\")\n            return '未知错误'\n            break\n        }\n\n\n\n      }\n\n    }\n  })\n","angular.module('app')\n\n  .service('dprtall', function ($http, userService) {\n    return {\n      show: function () {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n\n        return $http.post(host + 'Department/listAll', postdata)\n\n      },\n\n      editshow: function (editmsg) {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'Department/detail', postdata)\n\n      },\n\n      edit: function (editmsg) {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'Department/edit', postdata)\n\n      } // ,\n\n      // add: function(editmsg){\n\n      // \tvar postdata = {}\n\n      // \tpostdata.auth = userService.auth()\n      // \tpostdata.data = editmsg\n\n      // \treturn $http.post(host + 'Department/add',postdata)\n\n      // \t},\n\n      // del: function(editmsg){\n\n      // \tvar postdata = {}\n\n      // \tpostdata.auth = userService.auth()\n      // \tpostdata.data = editmsg\n\n      // \treturn $http.post(host + 'Department/del',postdata)\n\n      // \t}\n\n    }\n  }\n)\n","angular.module('app')\n\n  .service('userinfo', function ($http, userService) {\n    return {\n      show: function () {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n\n        return $http.post(host + 'User/info', postdata)\n\n      },\n\n      edit: function (editmsg) {\n        var postdata = {}\n\n        postdata.auth = userService.auth()\n        postdata.data = editmsg\n\n        return $http.post(host + 'User/infoEdit', postdata)\n\n      },\n\n      password: function (editmsg) {\n        var postdata = {}\n        postdata.data = {}\n\n        postdata.auth = userService.auth()\n        postdata.data.old = md5(editmsg.old)\n        postdata.data.new = md5(editmsg.new)\n        postdata.data.cfrm = md5(editmsg.cfrm)\n\n        return $http.post(host + 'User/pwEdit', postdata)\n\n      }\n\n    }\n  }\n)\n","angular.module('app')\n  .directive('logoutBtn', function (userService) {\n    return {\n      restrict: 'A',\n      link: function (scope, element, attrs) {\n        element.bind('click', function () {\n          scope.flag = true\n\n          userService.logout()\n\n          location.href = '#/login'\n\n        })\n      }\n    }\n\n  })\n"],"sourceRoot":"/source/"}